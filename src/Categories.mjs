// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "../node_modules/rescript/lib/es6/curry.js";
import * as React from "react";
import * as Js_array from "../node_modules/rescript/lib/es6/js_array.js";
import * as Belt_Array from "../node_modules/rescript/lib/es6/belt_Array.js";
import * as Client from "@apollo/client";
import * as ApolloClient__React_Hooks_UseQuery from "../node_modules/rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseQuery.mjs";
import * as ApolloClient__React_Hooks_UseMutation from "../node_modules/rescript-apollo-client/src/@apollo/client/react/hooks/ApolloClient__React_Hooks_UseMutation.mjs";

var Raw = {};

var query = Client.gql(["query ItemsQuery  {\nhagrid_category(limit: 10)  {\n__typename  \nid  \nname  \n}\n\n}\n"]);

function parse(value) {
  var value$1 = value.hagrid_category;
  return {
          hagrid_category: Js_array.map((function (value) {
                  return {
                          __typename: value.__typename,
                          id: value.id,
                          name: value.name
                        };
                }), value$1)
        };
}

function serialize(value) {
  var value$1 = value.hagrid_category;
  var hagrid_category = Js_array.map((function (value) {
          var value$1 = value.name;
          var value$2 = value.id;
          var value$3 = value.__typename;
          return {
                  __typename: value$3,
                  id: value$2,
                  name: value$1
                };
        }), value$1);
  return {
          hagrid_category: hagrid_category
        };
}

function serializeVariables(param) {
  
}

function makeVariables(param) {
  
}

function makeDefaultVariables(param) {
  
}

var ItemsQuery_inner = {
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables
};

var include = ApolloClient__React_Hooks_UseQuery.Extend({
      query: query,
      Raw: Raw,
      parse: parse,
      serialize: serialize,
      serializeVariables: serializeVariables
    });

var use = include.use;

var ItemsQuery_refetchQueryDescription = include.refetchQueryDescription;

var ItemsQuery_useLazy = include.useLazy;

var ItemsQuery_useLazyWithVariables = include.useLazyWithVariables;

var ItemsQuery = {
  ItemsQuery_inner: ItemsQuery_inner,
  Raw: Raw,
  query: query,
  parse: parse,
  serialize: serialize,
  serializeVariables: serializeVariables,
  makeVariables: makeVariables,
  makeDefaultVariables: makeDefaultVariables,
  refetchQueryDescription: ItemsQuery_refetchQueryDescription,
  use: use,
  useLazy: ItemsQuery_useLazy,
  useLazyWithVariables: ItemsQuery_useLazyWithVariables
};

var Raw$1 = {};

var query$1 = Client.gql(["mutation RemoveCategory($id: uuid!)  {\ncategory: delete_hagrid_category(where: {id: {_eq: $id}})  {\n__typename  \nreturning  {\n__typename  \nname  \n}\n\n}\n\n}\n"]);

function parse$1(value) {
  var value$1 = value.category;
  var tmp;
  if (value$1 == null) {
    tmp = undefined;
  } else {
    var value$2 = value$1.returning;
    tmp = {
      __typename: value$1.__typename,
      returning: Js_array.map((function (value) {
              return {
                      __typename: value.__typename,
                      name: value.name
                    };
            }), value$2)
    };
  }
  return {
          category: tmp
        };
}

function serialize$1(value) {
  var value$1 = value.category;
  var category;
  if (value$1 !== undefined) {
    var value$2 = value$1.returning;
    var returning = Js_array.map((function (value) {
            var value$1 = value.name;
            var value$2 = value.__typename;
            return {
                    __typename: value$2,
                    name: value$1
                  };
          }), value$2);
    var value$3 = value$1.__typename;
    category = {
      __typename: value$3,
      returning: returning
    };
  } else {
    category = null;
  }
  return {
          category: category
        };
}

function serializeVariables$1(inp) {
  return {
          id: inp.id
        };
}

function makeVariables$1(id, param) {
  return {
          id: id
        };
}

var RemoveCategory_inner = {
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1
};

var include$1 = ApolloClient__React_Hooks_UseMutation.Extend({
      query: query$1,
      Raw: Raw$1,
      parse: parse$1,
      serialize: serialize$1,
      serializeVariables: serializeVariables$1
    });

var use$1 = include$1.use;

var RemoveCategory_useWithVariables = include$1.useWithVariables;

var RemoveCategory = {
  RemoveCategory_inner: RemoveCategory_inner,
  Raw: Raw$1,
  query: query$1,
  parse: parse$1,
  serialize: serialize$1,
  serializeVariables: serializeVariables$1,
  makeVariables: makeVariables$1,
  use: use$1,
  useWithVariables: RemoveCategory_useWithVariables
};

var $$Window = {};

function Categories(Props) {
  var match = Curry.app(use$1, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var removeCategory = match[0];
  var match$1 = Curry.app(use, [
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined,
        undefined
      ]);
  var match$2 = match$1.data;
  if (match$1.loading) {
    return "Loading...";
  } else if (match$1.error !== undefined) {
    return "Error loading data";
  } else if (match$2 !== undefined) {
    return React.createElement("div", undefined, Belt_Array.map(match$2.hagrid_category, (function (category) {
                      return React.createElement("div", {
                                  key: String(category.id)
                                }, React.createElement("h3", undefined, category.name), React.createElement("button", {
                                      onClick: (function (param) {
                                          Curry._8(removeCategory, undefined, undefined, undefined, undefined, undefined, undefined, undefined, {
                                                id: category.id
                                              });
                                        })
                                    }, "Deletar"));
                    })));
  } else {
    return "Not to render";
  }
}

var make = Categories;

export {
  ItemsQuery ,
  RemoveCategory ,
  $$Window ,
  make ,
}
/* query Not a pure module */
